syntax = "proto3";

package rpcpb;

option go_package = ".;rpcpb";

// gRPC service for CRAQ nodes
service Node {
  // stream
  rpc StreamWrite(stream StreamWriteReq) returns (WriteAck);
  rpc StreamRead(StreamReadReq) returns (stream ReadChunk);

  rpc QueryVersion(VersionQuery) returns (VersionResponse);

  // List all files in a folder
  rpc ListFiles(FolderQuery) returns (FileList);
}

message StreamWriteReq {
  string folder = 1;
  uint64 seq = 2;
  string file_name = 3;
  string path = 4;
  bytes data = 5; // âœ… REQUIRED to stream file content
}

// Sent back by the tail when commit succeeds
message WriteAck {
  string folder = 1;
  string file_name = 2;
  uint64 seq = 3;
}

message StreamReadReq {
  string folder = 1;
  string file_name = 2;
}

message ReadChunk {
  bytes data = 1;
}

// Used to fetch version info (used by predecessor replicas)
message VersionQuery {
  string folder = 1;
  string file_name = 2;
}

// Carries latest clean version info
message VersionResponse {
  string folder = 1;
  uint64 seq = 2;
  string file_name = 3;
  string path = 4;
}

// Request to list all files in a given folder
message FolderQuery {
  string folder = 1;
}

// Response containing list of files
message FileList {
  repeated string file_names = 1;
}